{"ast":null,"code":"var _jsxFileName = \"S:\\\\React\\\\FoodOrderApp\\\\src\\\\components\\\\Cart\\\\Cart.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState } from 'react';\nimport classes from './Cart.module.css';\nimport CartItem from './CartItem';\nimport { Modal } from '../UI/Modal';\nimport CartContext from '../../store/cart-context';\nimport Checkout from './Checkout';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Cart = props => {\n  _s();\n\n  const [isCheckout, setIsCheckout] = useState(false);\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [didSubmit, setDidSubmit] = useState(false);\n  const cartCtx = useContext(CartContext);\n  const totalAmount = `$${cartCtx.totalAmount.toFixed(2)}`;\n  const hasItems = cartCtx.items.length > 0;\n\n  const cartItemAddHandler = item => {\n    cartCtx.addItem({ ...item,\n      amount: 1\n    });\n  };\n\n  const cartItemRemoveHandler = id => {\n    cartCtx.removeItem(id);\n  };\n\n  const orderHandler = () => {\n    setIsCheckout(true);\n  };\n\n  const submitOrderHandler = async userData => {\n    setIsSubmitting(true);\n    const response = await fetch('https://mealplanner-9e0bb-default-rtdb.firebaseio.com/orders.json', {\n      method: 'POST',\n      body: JSON.stringify({\n        user: userData,\n        orderedItems: cartCtx.items\n      })\n    });\n\n    if (!response.ok) {\n      console.log(\"Something Went Wrong in input data\");\n    }\n\n    setIsSubmitting(false);\n    setDidSubmit(true);\n    cartCtx.clearCart();\n  };\n\n  const cartItems = /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: classes['cart-items'],\n    children: // [{id: 'c1', name: 'Sushi', amount: 2, price: 12.00}].map(item => <li>{item.name}</li>)\n    cartCtx.items.map(item => /*#__PURE__*/_jsxDEV(CartItem, {\n      name: item.name,\n      amount: item.amount,\n      price: item.price,\n      onRemove: cartItemRemoveHandler.bind(null, item.id),\n      onAdd: cartItemAddHandler.bind(null, item)\n    }, item.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 24\n  }, this);\n\n  const modalActions = /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.actions,\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: classes['button--alt'],\n      onClick: props.onClose,\n      children: \"Close\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this), hasItems && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: classes.button,\n      onClick: orderHandler,\n      children: \"Order\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 22\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 27\n  }, this);\n\n  const cartModalContent = /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [cartItems, /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.total,\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Total Amount\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: totalAmount\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this), isCheckout && /*#__PURE__*/_jsxDEV(Checkout, {\n      onConfirm: submitOrderHandler,\n      onCancel: props.onClose\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 28\n    }, this), !isCheckout && modalActions]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 9\n  }, this);\n\n  const isSubmittingModalContent = /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Sending Order Data...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 38\n  }, this);\n\n  const didSubmitModalContent = /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Successfully sent the order!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.actions,\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: classes['button'],\n        onClick: props.onClose,\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 9\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    onClose: props.onClose,\n    children: [!isSubmitting && cartModalContent, isSubmitting && isSubmittingModalContent, didSubmit && didSubmitModalContent]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Cart, \"mkyP1T14krwt2zz5rXlJIrG6NCM=\");\n\n_c = Cart;\n\nvar _c;\n\n$RefreshReg$(_c, \"Cart\");","map":{"version":3,"sources":["S:/React/FoodOrderApp/src/components/Cart/Cart.js"],"names":["React","useContext","useState","classes","CartItem","Modal","CartContext","Checkout","Cart","props","isCheckout","setIsCheckout","isSubmitting","setIsSubmitting","didSubmit","setDidSubmit","cartCtx","totalAmount","toFixed","hasItems","items","length","cartItemAddHandler","item","addItem","amount","cartItemRemoveHandler","id","removeItem","orderHandler","submitOrderHandler","userData","response","fetch","method","body","JSON","stringify","user","orderedItems","ok","console","log","clearCart","cartItems","map","name","price","bind","modalActions","actions","onClose","button","cartModalContent","total","isSubmittingModalContent","didSubmitModalContent"],"mappings":"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","sourcesContent":["import React, { useContext, useState } from 'react';\r\nimport classes from './Cart.module.css';\r\nimport CartItem from './CartItem';\r\nimport { Modal } from '../UI/Modal';\r\nimport CartContext from '../../store/cart-context';\r\nimport Checkout from './Checkout';\r\n\r\nexport const Cart = (props) => {\r\n\r\n    const [isCheckout, setIsCheckout] = useState(false);\r\n    const [isSubmitting, setIsSubmitting] = useState(false);\r\n    const [didSubmit, setDidSubmit] = useState(false);\r\n    const cartCtx = useContext(CartContext);\r\n    const totalAmount = `$${cartCtx.totalAmount.toFixed(2)}`;\r\n    const hasItems = cartCtx.items.length > 0;\r\n\r\n    const cartItemAddHandler = (item) => {\r\n        cartCtx.addItem({ ...item, amount: 1 });\r\n    };\r\n\r\n    const cartItemRemoveHandler = (id) => {\r\n        cartCtx.removeItem(id);\r\n    };\r\n\r\n    const orderHandler = () => {\r\n        setIsCheckout(true);\r\n    }\r\n\r\n    const submitOrderHandler = async (userData) => {\r\n        setIsSubmitting(true);\r\n        const response = await fetch('https://mealplanner-9e0bb-default-rtdb.firebaseio.com/orders.json', {\r\n            method: 'POST',\r\n            body: JSON.stringify({\r\n                user: userData,\r\n                orderedItems: cartCtx.items\r\n            })\r\n        });\r\n\r\n        if(!response.ok){\r\n            console.log(\"Something Went Wrong in input data\")\r\n        }\r\n\r\n        setIsSubmitting(false);\r\n        setDidSubmit(true);\r\n        cartCtx.clearCart();\r\n    };\r\n\r\n    const cartItems = (<ul className={classes['cart-items']}>{\r\n        // [{id: 'c1', name: 'Sushi', amount: 2, price: 12.00}].map(item => <li>{item.name}</li>)\r\n        cartCtx.items.map(item =>\r\n            <CartItem\r\n                key={item.id}\r\n                name={item.name}\r\n                amount={item.amount}\r\n                price={item.price}\r\n                onRemove={cartItemRemoveHandler.bind(null, item.id)}\r\n                onAdd={cartItemAddHandler.bind(null, item)}\r\n            />\r\n        )\r\n\r\n    }</ul>);\r\n\r\n    const modalActions = (<div className={classes.actions}>\r\n        <button className={classes['button--alt']} onClick={props.onClose}>Close</button>\r\n        {hasItems && <button className={classes.button} onClick={orderHandler}>Order</button>}\r\n    </div>);\r\n\r\n    const cartModalContent = (\r\n        <React.Fragment>\r\n            {cartItems}\r\n            <div className={classes.total}>\r\n                <span>Total Amount</span>\r\n                <span>{totalAmount}</span>\r\n            </div>\r\n            {isCheckout && <Checkout onConfirm={submitOrderHandler} onCancel={props.onClose} />}\r\n            {!isCheckout && modalActions}\r\n        </React.Fragment>\r\n    );\r\n\r\n    const isSubmittingModalContent = <p>Sending Order Data...</p>\r\n    const didSubmitModalContent = (\r\n        <React.Fragment>\r\n            <p>Successfully sent the order!</p>\r\n            <div className={classes.actions}>\r\n                <button className={classes['button']} onClick={props.onClose}>Close</button>\r\n            </div>\r\n        </React.Fragment>\r\n    )\r\n    return (\r\n        <Modal onClose={props.onClose}>\r\n            {!isSubmitting && cartModalContent}\r\n            {isSubmitting && isSubmittingModalContent}\r\n            {didSubmit && didSubmitModalContent}\r\n        </Modal>\r\n    );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}